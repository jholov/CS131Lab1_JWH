import java.security.SecureRandom;
import java.util.Random;

/**
 * This is our NonPlayer Character that inherits
 * from GameCharacter it represent objects the game controls 
 * (as opposed to objects a human player controls).
 * @author 
 * @version 1.3
 * Lab1
 * CS131ON
 */
//Jake added extends GameCharacter to inherit from GameCharacter
public class NonPlayerCharacter extends GameCharacter{
	
	//Jake added instance variable indicated by UML diagram
	private boolean active;
	private String intelligenceType;
	
	//Jake created empty-argument constructor invoking super and setting active to false
	public NonPlayerCharacter() {
		super();
		setActive(false);
		setIntelligenceType("AVERAGE");
	}//end empty-argument constructor
	
	//Jake's preferred constructor based of UML Diagram
	public NonPlayerCharacter(String id, String personality, boolean active, String intelligenceType) {
		
		super(id, personality);
		setActive(active);
		setIntelligenceType(intelligenceType);
		
	}//end preferred constructor completed by Jake
	
	//implemented reportStruct method while adding the extra strings
	public String reportStructure() {
		
		StringBuilder bb = new StringBuilder();
		System.out.println(super.reportStructure());
		bb.append("Active: "+isActive()+"\n");
		bb.append("Intelligence: "+getIntelligenceType()+"\n");
		bb.append("==================================\n");
		return bb.toString();
		
		
	}//end of reportStructure
	
	//Jake Created introduce method to read out uniqueID
	public String introduce() {
		
		StringBuilder hi = new StringBuilder();
		hi.append("Hello, my name is "+getUniqueID());
		return hi.toString();
		
	}//end of introduce method
	
	//Jake created exclaim method 
	public String exclaim() {
		
	//creating exclamation strings
	StringBuilder rA = new StringBuilder();
	rA.append("Dag Gummit");
	
	StringBuilder rB = new StringBuilder();
	rB.append("Doggone it");
	
	StringBuilder rC = new StringBuilder();
	rC.append("Holy cow");
	
	StringBuilder rD = new StringBuilder();
	rD.append("Jeez");
	
	StringBuilder rE = new StringBuilder();
	rE.append("Well cheese and crackers");
	
	//random number generator between 1 and 5
	int range= 5;
	double rand = 0;
	Random rnd = new Random();
	rand = rnd.nextInt(range)+1;
	
	//if statements to return one of the above phrases at random
	if (rand == 1) {
		return rA.toString();
	}
	else if (rand == 2) {
		return rB.toString();
	}
	else if (rand == 3) {
		return rC.toString();
	}
	else if (rand == 4) {
		return rD.toString();
	}
	else if (rand == 5) {
		return rE.toString();
	}else
		return "";
	 
	}//end exclaim
	
	
	//Jake added Getters and Setters Generated by eclipse
	public boolean isActive() {
		return active;
	}
	public void setActive(boolean active) {
		this.active = active;
	}
	public String getIntelligenceType() {
		return intelligenceType;
	}
	public void setIntelligenceType(String intelligenceType) {
		this.intelligenceType = intelligenceType;
	}
	
	

}//end class
